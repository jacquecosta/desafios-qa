package steps;

import org.junit.Assert;

import cucumber.api.java.en.And;
import cucumber.api.java.en.Given;
import cucumber.api.java.en.Then;
import cucumber.api.java.en.When;
import io.restassured.RestAssured;
import io.restassured.path.json.JsonPath;
import io.restassured.response.Response;
import io.restassured.response.ResponseBody;
import io.restassured.response.ValidatableResponse;
import io.restassured.specification.RequestSpecification;

public class CenariosConhecidosSteps {
	
	private Response response;
	private ValidatableResponse json;
	private RequestSpecification request;
    private String ENDPOINT_POST_RELATORIOS = "https://api-v2.idwall.co/relatorios";
    private String TOKEN = "9a5c457e-d004-46d2-ad0b-b3f015af0c58";
    private String TYPE = "application/json";

	@Given("^A API de relatorio$")
	public void a_API_de_relatorio() {
		request = RestAssured.with().contentType(TYPE).header("Authorization", TOKEN);
		System.out.print("Request " + request);
	}

	@When("^A requisicao for realizada sem informar todos os parametros$")
	public void a_requisicao_for_realizada_sem_informar_todos_os_parametros() throws Throwable {
		response = request.given().contentType(TYPE).header("Authorization", TOKEN)
				   .body("{\r\n    \"matriz\": \"consultaPessoaDefault\",\r\n    \"parametros\": {\r\n        \"cpf_data_de_nascimento\": \"\",\r\n        \"cpf_nome\": \"\",\r\n        \"cpf_numero\": \"\"\r\n    }\r\n}")
				   .when()
				   .post(ENDPOINT_POST_RELATORIOS);
		
		System.out.println("Response " + response);

	}

	@Then("^A API deve retornar um status code (\\d+)$")
	public void a_API_deve_retornar_um_status_code(int statusCode) throws Throwable {
		json = response.then().statusCode(statusCode);
	}

	@And("^uma mensagem de erro tratada$")
	public void uma_mensagem_de_erro_tratada() throws Throwable {
		// Get JSON Representation from Response Body 
	    JsonPath jsonPathEvaluator = response.jsonPath();
	    // Get specific element from JSON document 
	    String error = jsonPathEvaluator.get("error");
	    // Validate if the specific JSON element is equal to expected value
	    Assert.assertTrue(error.equalsIgnoreCase("Bad Request"));
		
		
		/*{
		    "error": "Bad Request",
		    "message": "É necessário enviar ao menos um parâmetro para criação do relatório.",
		    "status_code": 400
		}*/
	}

}
